import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.PriorityQueue;
import java.util.Set;

/**
Alonso
 */
public class Employee implements CompanyUnit{
	private String name; //name of employee 
	private long employeeID; //employee id
	private List<PC> pcSet = new LinkedList<>(); //list of pcs that the empoyee has

	
	//constructor for employee
	public Employee(String name, long employeeID,List<PC> pcSet){
		this.name = name;
		this.employeeID = employeeID;
		this.pcSet = pcSet;
	}

	//comparator for list of pc set based on serial number
	private static Comparator<PC> pcSerialComparator = new Comparator<PC>() {

		@Override
		public int compare(PC arg0, PC arg1) {

			if (Integer.parseInt(arg0.getSerialNumber()) < Integer.parseInt(arg1.getSerialNumber())){
				return -1;
			}
			else if(Integer.parseInt(arg0.getSerialNumber()) > Integer.parseInt(arg1.getSerialNumber())){
				return 1;
			} else {
				return 0;
			}
		}
	};

	

//returns deopartment
	public Department getDepartment(){
		return null;
	}
	
	//returns employee id
	public long getEmployeeID(){
		return this.employeeID;
	}

	//returns the yearly bonus
	public double calcYearlyBonus(){
		return 0;
	}


//returns the string
	@Override
	public String getString() {
		// TODO Auto-generated method stub
		return null;
	}
	
	//returns purchase limit

	@Override
	public double getPurchaseLimit() {
		// TODO Auto-generated method stub
		return 0;
	}

	private void addPC(PC pc){
		if(!pcSet.contains(pc)){
			pcSet.add(pc);
			Collections.sort(pcSet,pcSerialComparator);
		}
	}

}
